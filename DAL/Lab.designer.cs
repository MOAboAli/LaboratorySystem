#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Laboratory.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Laboratory")]
	public partial class LabDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAppointmentType(AppointmentType instance);
    partial void UpdateAppointmentType(AppointmentType instance);
    partial void DeleteAppointmentType(AppointmentType instance);
    partial void InsertCheckList(CheckList instance);
    partial void UpdateCheckList(CheckList instance);
    partial void DeleteCheckList(CheckList instance);
    partial void InsertCheckListDetial(CheckListDetial instance);
    partial void UpdateCheckListDetial(CheckListDetial instance);
    partial void DeleteCheckListDetial(CheckListDetial instance);
    partial void InsertCheckListUser(CheckListUser instance);
    partial void UpdateCheckListUser(CheckListUser instance);
    partial void DeleteCheckListUser(CheckListUser instance);
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertLocation(Location instance);
    partial void UpdateLocation(Location instance);
    partial void DeleteLocation(Location instance);
    partial void InsertLocationUser(LocationUser instance);
    partial void UpdateLocationUser(LocationUser instance);
    partial void DeleteLocationUser(LocationUser instance);
    partial void InsertMedicalHistory(MedicalHistory instance);
    partial void UpdateMedicalHistory(MedicalHistory instance);
    partial void DeleteMedicalHistory(MedicalHistory instance);
    partial void InsertMedicalHistoryType(MedicalHistoryType instance);
    partial void UpdateMedicalHistoryType(MedicalHistoryType instance);
    partial void DeleteMedicalHistoryType(MedicalHistoryType instance);
    partial void InsertModuleUser(ModuleUser instance);
    partial void UpdateModuleUser(ModuleUser instance);
    partial void DeleteModuleUser(ModuleUser instance);
    partial void InsertPage(Page instance);
    partial void UpdatePage(Page instance);
    partial void DeletePage(Page instance);
    partial void InsertPageUser(PageUser instance);
    partial void UpdatePageUser(PageUser instance);
    partial void DeletePageUser(PageUser instance);
    partial void InsertPatientNote(PatientNote instance);
    partial void UpdatePatientNote(PatientNote instance);
    partial void DeletePatientNote(PatientNote instance);
    partial void Insertpatient(patient instance);
    partial void Updatepatient(patient instance);
    partial void Deletepatient(patient instance);
    partial void InsertPaymentInvoice(PaymentInvoice instance);
    partial void UpdatePaymentInvoice(PaymentInvoice instance);
    partial void DeletePaymentInvoice(PaymentInvoice instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    partial void InsertTestResultAppointmentDetial(TestResultAppointmentDetial instance);
    partial void UpdateTestResultAppointmentDetial(TestResultAppointmentDetial instance);
    partial void DeleteTestResultAppointmentDetial(TestResultAppointmentDetial instance);
    partial void InsertTestResultType(TestResultType instance);
    partial void UpdateTestResultType(TestResultType instance);
    partial void DeleteTestResultType(TestResultType instance);
    partial void InsertTest(Test instance);
    partial void UpdateTest(Test instance);
    partial void DeleteTest(Test instance);
    partial void InsertTestsType(TestsType instance);
    partial void UpdateTestsType(TestsType instance);
    partial void DeleteTestsType(TestsType instance);
    partial void InsertTown(Town instance);
    partial void UpdateTown(Town instance);
    partial void DeleteTown(Town instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUserType(UserType instance);
    partial void UpdateUserType(UserType instance);
    partial void DeleteUserType(UserType instance);
    partial void InsertAppointmentPatientDetial(AppointmentPatientDetial instance);
    partial void UpdateAppointmentPatientDetial(AppointmentPatientDetial instance);
    partial void DeleteAppointmentPatientDetial(AppointmentPatientDetial instance);
    partial void InsertAppointmentPatient(AppointmentPatient instance);
    partial void UpdateAppointmentPatient(AppointmentPatient instance);
    partial void DeleteAppointmentPatient(AppointmentPatient instance);
    partial void InsertModule(Module instance);
    partial void UpdateModule(Module instance);
    partial void DeleteModule(Module instance);
    partial void InsertDiscount(Discount instance);
    partial void UpdateDiscount(Discount instance);
    partial void DeleteDiscount(Discount instance);
    partial void InsertInvoiceDiscount(InvoiceDiscount instance);
    partial void UpdateInvoiceDiscount(InvoiceDiscount instance);
    partial void DeleteInvoiceDiscount(InvoiceDiscount instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertInvoiceDetial(InvoiceDetial instance);
    partial void UpdateInvoiceDetial(InvoiceDetial instance);
    partial void DeleteInvoiceDetial(InvoiceDetial instance);
    #endregion
		
		public LabDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["LaboratoryConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public LabDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LabDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LabDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LabDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AppointmentType> AppointmentTypes
		{
			get
			{
				return this.GetTable<AppointmentType>();
			}
		}
		
		public System.Data.Linq.Table<CheckList> CheckLists
		{
			get
			{
				return this.GetTable<CheckList>();
			}
		}
		
		public System.Data.Linq.Table<CheckListDetial> CheckListDetials
		{
			get
			{
				return this.GetTable<CheckListDetial>();
			}
		}
		
		public System.Data.Linq.Table<CheckListUser> CheckListUsers
		{
			get
			{
				return this.GetTable<CheckListUser>();
			}
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<Location> Locations
		{
			get
			{
				return this.GetTable<Location>();
			}
		}
		
		public System.Data.Linq.Table<LocationUser> LocationUsers
		{
			get
			{
				return this.GetTable<LocationUser>();
			}
		}
		
		public System.Data.Linq.Table<MedicalHistory> MedicalHistories
		{
			get
			{
				return this.GetTable<MedicalHistory>();
			}
		}
		
		public System.Data.Linq.Table<MedicalHistoryType> MedicalHistoryTypes
		{
			get
			{
				return this.GetTable<MedicalHistoryType>();
			}
		}
		
		public System.Data.Linq.Table<ModuleUser> ModuleUsers
		{
			get
			{
				return this.GetTable<ModuleUser>();
			}
		}
		
		public System.Data.Linq.Table<Page> Pages
		{
			get
			{
				return this.GetTable<Page>();
			}
		}
		
		public System.Data.Linq.Table<PageUser> PageUsers
		{
			get
			{
				return this.GetTable<PageUser>();
			}
		}
		
		public System.Data.Linq.Table<PatientNote> PatientNotes
		{
			get
			{
				return this.GetTable<PatientNote>();
			}
		}
		
		public System.Data.Linq.Table<patient> patients
		{
			get
			{
				return this.GetTable<patient>();
			}
		}
		
		public System.Data.Linq.Table<PaymentInvoice> PaymentInvoices
		{
			get
			{
				return this.GetTable<PaymentInvoice>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
		
		public System.Data.Linq.Table<TestResultAppointmentDetial> TestResultAppointmentDetials
		{
			get
			{
				return this.GetTable<TestResultAppointmentDetial>();
			}
		}
		
		public System.Data.Linq.Table<TestResultType> TestResultTypes
		{
			get
			{
				return this.GetTable<TestResultType>();
			}
		}
		
		public System.Data.Linq.Table<Test> Tests
		{
			get
			{
				return this.GetTable<Test>();
			}
		}
		
		public System.Data.Linq.Table<TestsType> TestsTypes
		{
			get
			{
				return this.GetTable<TestsType>();
			}
		}
		
		public System.Data.Linq.Table<Town> Towns
		{
			get
			{
				return this.GetTable<Town>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<UserType> UserTypes
		{
			get
			{
				return this.GetTable<UserType>();
			}
		}
		
		public System.Data.Linq.Table<AppointmentPatientDetial> AppointmentPatientDetials
		{
			get
			{
				return this.GetTable<AppointmentPatientDetial>();
			}
		}
		
		public System.Data.Linq.Table<AppointmentPatient> AppointmentPatients
		{
			get
			{
				return this.GetTable<AppointmentPatient>();
			}
		}
		
		public System.Data.Linq.Table<Module> Modules
		{
			get
			{
				return this.GetTable<Module>();
			}
		}
		
		public System.Data.Linq.Table<Discount> Discounts
		{
			get
			{
				return this.GetTable<Discount>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDiscount> InvoiceDiscounts
		{
			get
			{
				return this.GetTable<InvoiceDiscount>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<InvoiceDetial> InvoiceDetials
		{
			get
			{
				return this.GetTable<InvoiceDetial>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppointmentTypes")]
	public partial class AppointmentType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _AppointmentTypes;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppointmentTypesChanging(string value);
    partial void OnAppointmentTypesChanged();
    #endregion
		
		public AppointmentType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentTypes", DbType="NVarChar(50)")]
		public string AppointmentTypes
		{
			get
			{
				return this._AppointmentTypes;
			}
			set
			{
				if ((this._AppointmentTypes != value))
				{
					this.OnAppointmentTypesChanging(value);
					this.SendPropertyChanging();
					this._AppointmentTypes = value;
					this.SendPropertyChanged("AppointmentTypes");
					this.OnAppointmentTypesChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckList")]
	public partial class CheckList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _CheckListName;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCheckListNameChanging(string value);
    partial void OnCheckListNameChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public CheckList()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListName", DbType="NVarChar(150)")]
		public string CheckListName
		{
			get
			{
				return this._CheckListName;
			}
			set
			{
				if ((this._CheckListName != value))
				{
					this.OnCheckListNameChanging(value);
					this.SendPropertyChanging();
					this._CheckListName = value;
					this.SendPropertyChanged("CheckListName");
					this.OnCheckListNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckListDetials")]
	public partial class CheckListDetial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CheckListID;
		
		private string _Text;
		
		private System.Nullable<int> _OrderNo;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCheckListIDChanging(System.Nullable<int> value);
    partial void OnCheckListIDChanged();
    partial void OnTextChanging(string value);
    partial void OnTextChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    #endregion
		
		public CheckListDetial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListID", DbType="Int")]
		public System.Nullable<int> CheckListID
		{
			get
			{
				return this._CheckListID;
			}
			set
			{
				if ((this._CheckListID != value))
				{
					this.OnCheckListIDChanging(value);
					this.SendPropertyChanging();
					this._CheckListID = value;
					this.SendPropertyChanged("CheckListID");
					this.OnCheckListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Text", DbType="NVarChar(1000)")]
		public string Text
		{
			get
			{
				return this._Text;
			}
			set
			{
				if ((this._Text != value))
				{
					this.OnTextChanging(value);
					this.SendPropertyChanging();
					this._Text = value;
					this.SendPropertyChanged("Text");
					this.OnTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
		public System.Nullable<int> OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CheckListUser")]
	public partial class CheckListUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _CheckListID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _OrderNo;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<bool> _Mandatory;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
		private System.Nullable<int> _UserIDRec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCheckListIDChanging(System.Nullable<int> value);
    partial void OnCheckListIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnOrderNoChanging(System.Nullable<int> value);
    partial void OnOrderNoChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnMandatoryChanging(System.Nullable<bool> value);
    partial void OnMandatoryChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDRecChanging(System.Nullable<int> value);
    partial void OnUserIDRecChanged();
    #endregion
		
		public CheckListUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CheckListID", DbType="Int")]
		public System.Nullable<int> CheckListID
		{
			get
			{
				return this._CheckListID;
			}
			set
			{
				if ((this._CheckListID != value))
				{
					this.OnCheckListIDChanging(value);
					this.SendPropertyChanging();
					this._CheckListID = value;
					this.SendPropertyChanged("CheckListID");
					this.OnCheckListIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderNo", DbType="Int")]
		public System.Nullable<int> OrderNo
		{
			get
			{
				return this._OrderNo;
			}
			set
			{
				if ((this._OrderNo != value))
				{
					this.OnOrderNoChanging(value);
					this.SendPropertyChanging();
					this._OrderNo = value;
					this.SendPropertyChanged("OrderNo");
					this.OnOrderNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mandatory", DbType="Bit")]
		public System.Nullable<bool> Mandatory
		{
			get
			{
				return this._Mandatory;
			}
			set
			{
				if ((this._Mandatory != value))
				{
					this.OnMandatoryChanging(value);
					this.SendPropertyChanging();
					this._Mandatory = value;
					this.SendPropertyChanged("Mandatory");
					this.OnMandatoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDRec", DbType="Int")]
		public System.Nullable<int> UserIDRec
		{
			get
			{
				return this._UserIDRec;
			}
			set
			{
				if ((this._UserIDRec != value))
				{
					this.OnUserIDRecChanging(value);
					this.SendPropertyChanging();
					this._UserIDRec = value;
					this.SendPropertyChanged("UserIDRec");
					this.OnUserIDRecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _City1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCity1Changing(string value);
    partial void OnCity1Changed();
    #endregion
		
		public City()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="City", Storage="_City1", DbType="NVarChar(50)")]
		public string City1
		{
			get
			{
				return this._City1;
			}
			set
			{
				if ((this._City1 != value))
				{
					this.OnCity1Changing(value);
					this.SendPropertyChanging();
					this._City1 = value;
					this.SendPropertyChanged("City1");
					this.OnCity1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Gender1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGender1Changing(string value);
    partial void OnGender1Changed();
    #endregion
		
		public Gender()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Gender", Storage="_Gender1", DbType="NVarChar(50)")]
		public string Gender1
		{
			get
			{
				return this._Gender1;
			}
			set
			{
				if ((this._Gender1 != value))
				{
					this.OnGender1Changing(value);
					this.SendPropertyChanging();
					this._Gender1 = value;
					this.SendPropertyChanged("Gender1");
					this.OnGender1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Locations")]
	public partial class Location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Location1;
		
		private string _Address;
		
		private System.Nullable<bool> _Active;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnLocation1Changing(string value);
    partial void OnLocation1Changed();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    #endregion
		
		public Location()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Location", Storage="_Location1", DbType="NVarChar(50)")]
		public string Location1
		{
			get
			{
				return this._Location1;
			}
			set
			{
				if ((this._Location1 != value))
				{
					this.OnLocation1Changing(value);
					this.SendPropertyChanging();
					this._Location1 = value;
					this.SendPropertyChanged("Location1");
					this.OnLocation1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LocationUser")]
	public partial class LocationUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _LocationID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserIDrec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnLocationIDChanging(System.Nullable<int> value);
    partial void OnLocationIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDrecChanging(System.Nullable<int> value);
    partial void OnUserIDrecChanged();
    #endregion
		
		public LocationUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LocationID", DbType="Int")]
		public System.Nullable<int> LocationID
		{
			get
			{
				return this._LocationID;
			}
			set
			{
				if ((this._LocationID != value))
				{
					this.OnLocationIDChanging(value);
					this.SendPropertyChanging();
					this._LocationID = value;
					this.SendPropertyChanged("LocationID");
					this.OnLocationIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDrec", DbType="Int")]
		public System.Nullable<int> UserIDrec
		{
			get
			{
				return this._UserIDrec;
			}
			set
			{
				if ((this._UserIDrec != value))
				{
					this.OnUserIDrecChanging(value);
					this.SendPropertyChanging();
					this._UserIDrec = value;
					this.SendPropertyChanged("UserIDrec");
					this.OnUserIDrecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalHistory")]
	public partial class MedicalHistory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatientID;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private string _Note;
		
		private System.Nullable<int> _MedicalHistoryTypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnMedicalHistoryTypeIDChanging(System.Nullable<int> value);
    partial void OnMedicalHistoryTypeIDChanged();
    #endregion
		
		public MedicalHistory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="Date")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MedicalHistoryTypeID", DbType="Int")]
		public System.Nullable<int> MedicalHistoryTypeID
		{
			get
			{
				return this._MedicalHistoryTypeID;
			}
			set
			{
				if ((this._MedicalHistoryTypeID != value))
				{
					this.OnMedicalHistoryTypeIDChanging(value);
					this.SendPropertyChanging();
					this._MedicalHistoryTypeID = value;
					this.SendPropertyChanged("MedicalHistoryTypeID");
					this.OnMedicalHistoryTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MedicalHistoryType")]
	public partial class MedicalHistoryType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TypeName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeNameChanging(string value);
    partial void OnTypeNameChanged();
    #endregion
		
		public MedicalHistoryType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeName", DbType="NVarChar(50)")]
		public string TypeName
		{
			get
			{
				return this._TypeName;
			}
			set
			{
				if ((this._TypeName != value))
				{
					this.OnTypeNameChanging(value);
					this.SendPropertyChanging();
					this._TypeName = value;
					this.SendPropertyChanged("TypeName");
					this.OnTypeNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ModuleUser")]
	public partial class ModuleUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserIDrec;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDrecChanging(System.Nullable<int> value);
    partial void OnUserIDrecChanged();
    #endregion
		
		public ModuleUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDrec", DbType="Int")]
		public System.Nullable<int> UserIDrec
		{
			get
			{
				return this._UserIDrec;
			}
			set
			{
				if ((this._UserIDrec != value))
				{
					this.OnUserIDrecChanging(value);
					this.SendPropertyChanging();
					this._UserIDrec = value;
					this.SendPropertyChanged("UserIDrec");
					this.OnUserIDrecChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pages")]
	public partial class Page : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _PageName;
		
		private System.Nullable<int> _ModuleID;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _OpenFrom;
		
		private System.Nullable<System.DateTime> _EndFrom;
		
		private string _AuthText1;
		
		private string _AuthText2;
		
		private string _PageURL;
		
		private string _PageText;
		
		private System.Nullable<bool> _Show;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageNameChanging(string value);
    partial void OnPageNameChanged();
    partial void OnModuleIDChanging(System.Nullable<int> value);
    partial void OnModuleIDChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnOpenFromChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenFromChanged();
    partial void OnEndFromChanging(System.Nullable<System.DateTime> value);
    partial void OnEndFromChanged();
    partial void OnAuthText1Changing(string value);
    partial void OnAuthText1Changed();
    partial void OnAuthText2Changing(string value);
    partial void OnAuthText2Changed();
    partial void OnPageURLChanging(string value);
    partial void OnPageURLChanged();
    partial void OnPageTextChanging(string value);
    partial void OnPageTextChanged();
    partial void OnShowChanging(System.Nullable<bool> value);
    partial void OnShowChanged();
    #endregion
		
		public Page()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageName", DbType="NVarChar(50)")]
		public string PageName
		{
			get
			{
				return this._PageName;
			}
			set
			{
				if ((this._PageName != value))
				{
					this.OnPageNameChanging(value);
					this.SendPropertyChanging();
					this._PageName = value;
					this.SendPropertyChanged("PageName");
					this.OnPageNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleID", DbType="Int")]
		public System.Nullable<int> ModuleID
		{
			get
			{
				return this._ModuleID;
			}
			set
			{
				if ((this._ModuleID != value))
				{
					this.OnModuleIDChanging(value);
					this.SendPropertyChanging();
					this._ModuleID = value;
					this.SendPropertyChanged("ModuleID");
					this.OnModuleIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpenFrom
		{
			get
			{
				return this._OpenFrom;
			}
			set
			{
				if ((this._OpenFrom != value))
				{
					this.OnOpenFromChanging(value);
					this.SendPropertyChanging();
					this._OpenFrom = value;
					this.SendPropertyChanged("OpenFrom");
					this.OnOpenFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndFrom
		{
			get
			{
				return this._EndFrom;
			}
			set
			{
				if ((this._EndFrom != value))
				{
					this.OnEndFromChanging(value);
					this.SendPropertyChanging();
					this._EndFrom = value;
					this.SendPropertyChanged("EndFrom");
					this.OnEndFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthText1", DbType="NVarChar(50)")]
		public string AuthText1
		{
			get
			{
				return this._AuthText1;
			}
			set
			{
				if ((this._AuthText1 != value))
				{
					this.OnAuthText1Changing(value);
					this.SendPropertyChanging();
					this._AuthText1 = value;
					this.SendPropertyChanged("AuthText1");
					this.OnAuthText1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AuthText2", DbType="NVarChar(50)")]
		public string AuthText2
		{
			get
			{
				return this._AuthText2;
			}
			set
			{
				if ((this._AuthText2 != value))
				{
					this.OnAuthText2Changing(value);
					this.SendPropertyChanging();
					this._AuthText2 = value;
					this.SendPropertyChanged("AuthText2");
					this.OnAuthText2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageURL", DbType="NVarChar(200)")]
		public string PageURL
		{
			get
			{
				return this._PageURL;
			}
			set
			{
				if ((this._PageURL != value))
				{
					this.OnPageURLChanging(value);
					this.SendPropertyChanging();
					this._PageURL = value;
					this.SendPropertyChanged("PageURL");
					this.OnPageURLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageText", DbType="NVarChar(50)")]
		public string PageText
		{
			get
			{
				return this._PageText;
			}
			set
			{
				if ((this._PageText != value))
				{
					this.OnPageTextChanging(value);
					this.SendPropertyChanging();
					this._PageText = value;
					this.SendPropertyChanged("PageText");
					this.OnPageTextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Show", DbType="Bit")]
		public System.Nullable<bool> Show
		{
			get
			{
				return this._Show;
			}
			set
			{
				if ((this._Show != value))
				{
					this.OnShowChanging(value);
					this.SendPropertyChanging();
					this._Show = value;
					this.SendPropertyChanged("Show");
					this.OnShowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PageUser")]
	public partial class PageUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PageID;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _Auth1;
		
		private System.Nullable<bool> _Auth2;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserIDRec;
		
		private System.Nullable<bool> _Shown;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPageIDChanging(System.Nullable<int> value);
    partial void OnPageIDChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnAuth1Changing(System.Nullable<bool> value);
    partial void OnAuth1Changed();
    partial void OnAuth2Changing(System.Nullable<bool> value);
    partial void OnAuth2Changed();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDRecChanging(System.Nullable<int> value);
    partial void OnUserIDRecChanged();
    partial void OnShownChanging(System.Nullable<bool> value);
    partial void OnShownChanged();
    #endregion
		
		public PageUser()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PageID", DbType="Int")]
		public System.Nullable<int> PageID
		{
			get
			{
				return this._PageID;
			}
			set
			{
				if ((this._PageID != value))
				{
					this.OnPageIDChanging(value);
					this.SendPropertyChanging();
					this._PageID = value;
					this.SendPropertyChanged("PageID");
					this.OnPageIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auth1", DbType="Bit")]
		public System.Nullable<bool> Auth1
		{
			get
			{
				return this._Auth1;
			}
			set
			{
				if ((this._Auth1 != value))
				{
					this.OnAuth1Changing(value);
					this.SendPropertyChanging();
					this._Auth1 = value;
					this.SendPropertyChanged("Auth1");
					this.OnAuth1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Auth2", DbType="Bit")]
		public System.Nullable<bool> Auth2
		{
			get
			{
				return this._Auth2;
			}
			set
			{
				if ((this._Auth2 != value))
				{
					this.OnAuth2Changing(value);
					this.SendPropertyChanging();
					this._Auth2 = value;
					this.SendPropertyChanged("Auth2");
					this.OnAuth2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserIDRec", DbType="Int")]
		public System.Nullable<int> UserIDRec
		{
			get
			{
				return this._UserIDRec;
			}
			set
			{
				if ((this._UserIDRec != value))
				{
					this.OnUserIDRecChanging(value);
					this.SendPropertyChanging();
					this._UserIDRec = value;
					this.SendPropertyChanged("UserIDRec");
					this.OnUserIDRecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shown", DbType="Bit")]
		public System.Nullable<bool> Shown
		{
			get
			{
				return this._Shown;
			}
			set
			{
				if ((this._Shown != value))
				{
					this.OnShownChanging(value);
					this.SendPropertyChanging();
					this._Shown = value;
					this.SendPropertyChanged("Shown");
					this.OnShownChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PatientNotes")]
	public partial class PatientNote : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _PatientID;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public PatientNote()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.patients")]
	public partial class patient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _FullName;
		
		private string _NationalID;
		
		private string _Mobile1;
		
		private string _Mobile2;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private string _Address;
		
		private System.Nullable<int> _City;
		
		private System.Nullable<int> _Town;
		
		private System.Nullable<byte> _Gender;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<int> _LastModfiyUserID;
		
		private System.Nullable<System.DateTime> _LastModfyRectime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnFullNameChanging(string value);
    partial void OnFullNameChanged();
    partial void OnNationalIDChanging(string value);
    partial void OnNationalIDChanged();
    partial void OnMobile1Changing(string value);
    partial void OnMobile1Changed();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(System.Nullable<int> value);
    partial void OnCityChanged();
    partial void OnTownChanging(System.Nullable<int> value);
    partial void OnTownChanged();
    partial void OnGenderChanging(System.Nullable<byte> value);
    partial void OnGenderChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnLastModfiyUserIDChanging(System.Nullable<int> value);
    partial void OnLastModfiyUserIDChanged();
    partial void OnLastModfyRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastModfyRectimeChanged();
    #endregion
		
		public patient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(150)")]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this.OnFullNameChanging(value);
					this.SendPropertyChanging();
					this._FullName = value;
					this.SendPropertyChanged("FullName");
					this.OnFullNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NationalID", DbType="NVarChar(50)")]
		public string NationalID
		{
			get
			{
				return this._NationalID;
			}
			set
			{
				if ((this._NationalID != value))
				{
					this.OnNationalIDChanging(value);
					this.SendPropertyChanging();
					this._NationalID = value;
					this.SendPropertyChanged("NationalID");
					this.OnNationalIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(50)")]
		public string Mobile1
		{
			get
			{
				return this._Mobile1;
			}
			set
			{
				if ((this._Mobile1 != value))
				{
					this.OnMobile1Changing(value);
					this.SendPropertyChanging();
					this._Mobile1 = value;
					this.SendPropertyChanged("Mobile1");
					this.OnMobile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(50)")]
		public string Mobile2
		{
			get
			{
				return this._Mobile2;
			}
			set
			{
				if ((this._Mobile2 != value))
				{
					this.OnMobile2Changing(value);
					this.SendPropertyChanging();
					this._Mobile2 = value;
					this.SendPropertyChanged("Mobile2");
					this.OnMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Int")]
		public System.Nullable<int> City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="Int")]
		public System.Nullable<int> Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt")]
		public System.Nullable<byte> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModfiyUserID", DbType="Int")]
		public System.Nullable<int> LastModfiyUserID
		{
			get
			{
				return this._LastModfiyUserID;
			}
			set
			{
				if ((this._LastModfiyUserID != value))
				{
					this.OnLastModfiyUserIDChanging(value);
					this.SendPropertyChanging();
					this._LastModfiyUserID = value;
					this.SendPropertyChanged("LastModfiyUserID");
					this.OnLastModfiyUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastModfyRectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastModfyRectime
		{
			get
			{
				return this._LastModfyRectime;
			}
			set
			{
				if ((this._LastModfyRectime != value))
				{
					this.OnLastModfyRectimeChanging(value);
					this.SendPropertyChanging();
					this._LastModfyRectime = value;
					this.SendPropertyChanged("LastModfyRectime");
					this.OnLastModfyRectimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PaymentInvoice")]
	public partial class PaymentInvoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Payment;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Remain;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _InvoiceDetialsID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnPaymentChanging(string value);
    partial void OnPaymentChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnRemainChanging(System.Nullable<decimal> value);
    partial void OnRemainChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnInvoiceDetialsIDChanging(System.Nullable<int> value);
    partial void OnInvoiceDetialsIDChanged();
    #endregion
		
		public PaymentInvoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Payment", DbType="NVarChar(50)")]
		public string Payment
		{
			get
			{
				return this._Payment;
			}
			set
			{
				if ((this._Payment != value))
				{
					this.OnPaymentChanging(value);
					this.SendPropertyChanging();
					this._Payment = value;
					this.SendPropertyChanged("Payment");
					this.OnPaymentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remain", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Remain
		{
			get
			{
				return this._Remain;
			}
			set
			{
				if ((this._Remain != value))
				{
					this.OnRemainChanging(value);
					this.SendPropertyChanging();
					this._Remain = value;
					this.SendPropertyChanged("Remain");
					this.OnRemainChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetialsID", DbType="Int")]
		public System.Nullable<int> InvoiceDetialsID
		{
			get
			{
				return this._InvoiceDetialsID;
			}
			set
			{
				if ((this._InvoiceDetialsID != value))
				{
					this.OnInvoiceDetialsIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetialsID = value;
					this.SendPropertyChanged("InvoiceDetialsID");
					this.OnInvoiceDetialsIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Name;
		
		private string _Mobile1;
		
		private string _Mobile2;
		
		private string _HomePhone;
		
		private string _Address;
		
		private System.Nullable<int> _City;
		
		private System.Nullable<int> _Town;
		
		private string _Postion;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _BirthDate;
		
		private System.Nullable<System.DateTime> _StartingWorkingdate;
		
		private System.Nullable<System.DateTime> _EndWorkingDate;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<decimal> _Salary;
		
		private System.Nullable<System.TimeSpan> _WorkingTimeFrom;
		
		private System.Nullable<System.TimeSpan> _WorkingTimeTo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnMobile1Changing(string value);
    partial void OnMobile1Changed();
    partial void OnMobile2Changing(string value);
    partial void OnMobile2Changed();
    partial void OnHomePhoneChanging(string value);
    partial void OnHomePhoneChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(System.Nullable<int> value);
    partial void OnCityChanged();
    partial void OnTownChanging(System.Nullable<int> value);
    partial void OnTownChanged();
    partial void OnPostionChanging(string value);
    partial void OnPostionChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnBirthDateChanging(System.Nullable<System.DateTime> value);
    partial void OnBirthDateChanged();
    partial void OnStartingWorkingdateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartingWorkingdateChanged();
    partial void OnEndWorkingDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndWorkingDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnSalaryChanging(System.Nullable<decimal> value);
    partial void OnSalaryChanged();
    partial void OnWorkingTimeFromChanging(System.Nullable<System.TimeSpan> value);
    partial void OnWorkingTimeFromChanged();
    partial void OnWorkingTimeToChanging(System.Nullable<System.TimeSpan> value);
    partial void OnWorkingTimeToChanged();
    #endregion
		
		public Staff()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(150)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile1", DbType="NVarChar(50)")]
		public string Mobile1
		{
			get
			{
				return this._Mobile1;
			}
			set
			{
				if ((this._Mobile1 != value))
				{
					this.OnMobile1Changing(value);
					this.SendPropertyChanging();
					this._Mobile1 = value;
					this.SendPropertyChanged("Mobile1");
					this.OnMobile1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mobile2", DbType="NVarChar(50)")]
		public string Mobile2
		{
			get
			{
				return this._Mobile2;
			}
			set
			{
				if ((this._Mobile2 != value))
				{
					this.OnMobile2Changing(value);
					this.SendPropertyChanging();
					this._Mobile2 = value;
					this.SendPropertyChanged("Mobile2");
					this.OnMobile2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HomePhone", DbType="NVarChar(50)")]
		public string HomePhone
		{
			get
			{
				return this._HomePhone;
			}
			set
			{
				if ((this._HomePhone != value))
				{
					this.OnHomePhoneChanging(value);
					this.SendPropertyChanging();
					this._HomePhone = value;
					this.SendPropertyChanged("HomePhone");
					this.OnHomePhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="Int")]
		public System.Nullable<int> City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Town", DbType="Int")]
		public System.Nullable<int> Town
		{
			get
			{
				return this._Town;
			}
			set
			{
				if ((this._Town != value))
				{
					this.OnTownChanging(value);
					this.SendPropertyChanging();
					this._Town = value;
					this.SendPropertyChanged("Town");
					this.OnTownChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Postion", DbType="NVarChar(150)")]
		public string Postion
		{
			get
			{
				return this._Postion;
			}
			set
			{
				if ((this._Postion != value))
				{
					this.OnPostionChanging(value);
					this.SendPropertyChanging();
					this._Postion = value;
					this.SendPropertyChanged("Postion");
					this.OnPostionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BirthDate", DbType="Date")]
		public System.Nullable<System.DateTime> BirthDate
		{
			get
			{
				return this._BirthDate;
			}
			set
			{
				if ((this._BirthDate != value))
				{
					this.OnBirthDateChanging(value);
					this.SendPropertyChanging();
					this._BirthDate = value;
					this.SendPropertyChanged("BirthDate");
					this.OnBirthDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingWorkingdate", DbType="Date")]
		public System.Nullable<System.DateTime> StartingWorkingdate
		{
			get
			{
				return this._StartingWorkingdate;
			}
			set
			{
				if ((this._StartingWorkingdate != value))
				{
					this.OnStartingWorkingdateChanging(value);
					this.SendPropertyChanging();
					this._StartingWorkingdate = value;
					this.SendPropertyChanged("StartingWorkingdate");
					this.OnStartingWorkingdateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndWorkingDate", DbType="Date")]
		public System.Nullable<System.DateTime> EndWorkingDate
		{
			get
			{
				return this._EndWorkingDate;
			}
			set
			{
				if ((this._EndWorkingDate != value))
				{
					this.OnEndWorkingDateChanging(value);
					this.SendPropertyChanging();
					this._EndWorkingDate = value;
					this.SendPropertyChanged("EndWorkingDate");
					this.OnEndWorkingDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Salary", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Salary
		{
			get
			{
				return this._Salary;
			}
			set
			{
				if ((this._Salary != value))
				{
					this.OnSalaryChanging(value);
					this.SendPropertyChanging();
					this._Salary = value;
					this.SendPropertyChanged("Salary");
					this.OnSalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingTimeFrom", DbType="Time")]
		public System.Nullable<System.TimeSpan> WorkingTimeFrom
		{
			get
			{
				return this._WorkingTimeFrom;
			}
			set
			{
				if ((this._WorkingTimeFrom != value))
				{
					this.OnWorkingTimeFromChanging(value);
					this.SendPropertyChanging();
					this._WorkingTimeFrom = value;
					this.SendPropertyChanged("WorkingTimeFrom");
					this.OnWorkingTimeFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingTimeTo", DbType="Time")]
		public System.Nullable<System.TimeSpan> WorkingTimeTo
		{
			get
			{
				return this._WorkingTimeTo;
			}
			set
			{
				if ((this._WorkingTimeTo != value))
				{
					this.OnWorkingTimeToChanging(value);
					this.SendPropertyChanging();
					this._WorkingTimeTo = value;
					this.SendPropertyChanged("WorkingTimeTo");
					this.OnWorkingTimeToChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResultAppointmentDetials")]
	public partial class TestResultAppointmentDetial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Test;
		
		private string _TestResult1;
		
		private string _TestResult2;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<int> _AppointmentDestialID;
		
		private System.Nullable<int> _TestResultID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTestChanging(string value);
    partial void OnTestChanged();
    partial void OnTestResult1Changing(string value);
    partial void OnTestResult1Changed();
    partial void OnTestResult2Changing(string value);
    partial void OnTestResult2Changed();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnAppointmentDestialIDChanging(System.Nullable<int> value);
    partial void OnAppointmentDestialIDChanged();
    partial void OnTestResultIDChanging(System.Nullable<int> value);
    partial void OnTestResultIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    #endregion
		
		public TestResultAppointmentDetial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Test", DbType="NVarChar(50)")]
		public string Test
		{
			get
			{
				return this._Test;
			}
			set
			{
				if ((this._Test != value))
				{
					this.OnTestChanging(value);
					this.SendPropertyChanging();
					this._Test = value;
					this.SendPropertyChanged("Test");
					this.OnTestChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResult1", DbType="NVarChar(50)")]
		public string TestResult1
		{
			get
			{
				return this._TestResult1;
			}
			set
			{
				if ((this._TestResult1 != value))
				{
					this.OnTestResult1Changing(value);
					this.SendPropertyChanging();
					this._TestResult1 = value;
					this.SendPropertyChanged("TestResult1");
					this.OnTestResult1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResult2", DbType="NVarChar(50)")]
		public string TestResult2
		{
			get
			{
				return this._TestResult2;
			}
			set
			{
				if ((this._TestResult2 != value))
				{
					this.OnTestResult2Changing(value);
					this.SendPropertyChanging();
					this._TestResult2 = value;
					this.SendPropertyChanged("TestResult2");
					this.OnTestResult2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentDestialID", DbType="Int")]
		public System.Nullable<int> AppointmentDestialID
		{
			get
			{
				return this._AppointmentDestialID;
			}
			set
			{
				if ((this._AppointmentDestialID != value))
				{
					this.OnAppointmentDestialIDChanging(value);
					this.SendPropertyChanging();
					this._AppointmentDestialID = value;
					this.SendPropertyChanged("AppointmentDestialID");
					this.OnAppointmentDestialIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestResultID", DbType="Int")]
		public System.Nullable<int> TestResultID
		{
			get
			{
				return this._TestResultID;
			}
			set
			{
				if ((this._TestResultID != value))
				{
					this.OnTestResultIDChanging(value);
					this.SendPropertyChanging();
					this._TestResultID = value;
					this.SendPropertyChanged("TestResultID");
					this.OnTestResultIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestResultType")]
	public partial class TestResultType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _TestID;
		
		private System.Nullable<int> _Gender;
		
		private System.Nullable<int> _TypeID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTestIDChanging(System.Nullable<int> value);
    partial void OnTestIDChanged();
    partial void OnGenderChanging(System.Nullable<int> value);
    partial void OnGenderChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    #endregion
		
		public TestResultType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestID", DbType="Int")]
		public System.Nullable<int> TestID
		{
			get
			{
				return this._TestID;
			}
			set
			{
				if ((this._TestID != value))
				{
					this.OnTestIDChanging(value);
					this.SendPropertyChanging();
					this._TestID = value;
					this.SendPropertyChanged("TestID");
					this.OnTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Int")]
		public System.Nullable<int> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tests")]
	public partial class Test : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TestName;
		
		private string _Description;
		
		private System.Nullable<decimal> _MinRange;
		
		private System.Nullable<decimal> _MaxRange;
		
		private System.Nullable<int> _TestType;
		
		private string _TestInternalCode;
		
		private string _TestCode;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Cost;
		
		private string _TestRequiremnts;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private string _TestSteps;
		
		private string _TestNameAR;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTestNameChanging(string value);
    partial void OnTestNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnMinRangeChanging(System.Nullable<decimal> value);
    partial void OnMinRangeChanged();
    partial void OnMaxRangeChanging(System.Nullable<decimal> value);
    partial void OnMaxRangeChanged();
    partial void OnTestTypeChanging(System.Nullable<int> value);
    partial void OnTestTypeChanged();
    partial void OnTestInternalCodeChanging(string value);
    partial void OnTestInternalCodeChanged();
    partial void OnTestCodeChanging(string value);
    partial void OnTestCodeChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnTestRequiremntsChanging(string value);
    partial void OnTestRequiremntsChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnTestStepsChanging(string value);
    partial void OnTestStepsChanged();
    partial void OnTestNameARChanging(string value);
    partial void OnTestNameARChanged();
    #endregion
		
		public Test()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestName", DbType="NVarChar(200)")]
		public string TestName
		{
			get
			{
				return this._TestName;
			}
			set
			{
				if ((this._TestName != value))
				{
					this.OnTestNameChanging(value);
					this.SendPropertyChanging();
					this._TestName = value;
					this.SendPropertyChanged("TestName");
					this.OnTestNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(500)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinRange", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MinRange
		{
			get
			{
				return this._MinRange;
			}
			set
			{
				if ((this._MinRange != value))
				{
					this.OnMinRangeChanging(value);
					this.SendPropertyChanging();
					this._MinRange = value;
					this.SendPropertyChanged("MinRange");
					this.OnMinRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxRange", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> MaxRange
		{
			get
			{
				return this._MaxRange;
			}
			set
			{
				if ((this._MaxRange != value))
				{
					this.OnMaxRangeChanging(value);
					this.SendPropertyChanging();
					this._MaxRange = value;
					this.SendPropertyChanged("MaxRange");
					this.OnMaxRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestType", DbType="Int")]
		public System.Nullable<int> TestType
		{
			get
			{
				return this._TestType;
			}
			set
			{
				if ((this._TestType != value))
				{
					this.OnTestTypeChanging(value);
					this.SendPropertyChanging();
					this._TestType = value;
					this.SendPropertyChanged("TestType");
					this.OnTestTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInternalCode", DbType="NVarChar(50)")]
		public string TestInternalCode
		{
			get
			{
				return this._TestInternalCode;
			}
			set
			{
				if ((this._TestInternalCode != value))
				{
					this.OnTestInternalCodeChanging(value);
					this.SendPropertyChanging();
					this._TestInternalCode = value;
					this.SendPropertyChanged("TestInternalCode");
					this.OnTestInternalCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestCode", DbType="NVarChar(50)")]
		public string TestCode
		{
			get
			{
				return this._TestCode;
			}
			set
			{
				if ((this._TestCode != value))
				{
					this.OnTestCodeChanging(value);
					this.SendPropertyChanging();
					this._TestCode = value;
					this.SendPropertyChanged("TestCode");
					this.OnTestCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestRequiremnts", DbType="NVarChar(500)")]
		public string TestRequiremnts
		{
			get
			{
				return this._TestRequiremnts;
			}
			set
			{
				if ((this._TestRequiremnts != value))
				{
					this.OnTestRequiremntsChanging(value);
					this.SendPropertyChanging();
					this._TestRequiremnts = value;
					this.SendPropertyChanged("TestRequiremnts");
					this.OnTestRequiremntsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestSteps", DbType="NVarChar(500)")]
		public string TestSteps
		{
			get
			{
				return this._TestSteps;
			}
			set
			{
				if ((this._TestSteps != value))
				{
					this.OnTestStepsChanging(value);
					this.SendPropertyChanging();
					this._TestSteps = value;
					this.SendPropertyChanged("TestSteps");
					this.OnTestStepsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestNameAR", DbType="NVarChar(200)")]
		public string TestNameAR
		{
			get
			{
				return this._TestNameAR;
			}
			set
			{
				if ((this._TestNameAR != value))
				{
					this.OnTestNameARChanging(value);
					this.SendPropertyChanging();
					this._TestNameAR = value;
					this.SendPropertyChanged("TestNameAR");
					this.OnTestNameARChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestsType")]
	public partial class TestsType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Type;
		
		private System.Nullable<bool> _Numerical;
		
		private System.Nullable<bool> _MAX___MIN;
		
		private System.Nullable<bool> _Positive_Negative;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    partial void OnNumericalChanging(System.Nullable<bool> value);
    partial void OnNumericalChanged();
    partial void OnMAX___MINChanging(System.Nullable<bool> value);
    partial void OnMAX___MINChanged();
    partial void OnPositive_NegativeChanging(System.Nullable<bool> value);
    partial void OnPositive_NegativeChanged();
    #endregion
		
		public TestsType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Numerical", DbType="Bit")]
		public System.Nullable<bool> Numerical
		{
			get
			{
				return this._Numerical;
			}
			set
			{
				if ((this._Numerical != value))
				{
					this.OnNumericalChanging(value);
					this.SendPropertyChanging();
					this._Numerical = value;
					this.SendPropertyChanged("Numerical");
					this.OnNumericalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[MAX & MIN]", Storage="_MAX___MIN", DbType="Bit")]
		public System.Nullable<bool> MAX___MIN
		{
			get
			{
				return this._MAX___MIN;
			}
			set
			{
				if ((this._MAX___MIN != value))
				{
					this.OnMAX___MINChanging(value);
					this.SendPropertyChanging();
					this._MAX___MIN = value;
					this.SendPropertyChanged("MAX___MIN");
					this.OnMAX___MINChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Positive&Negative]", Storage="_Positive_Negative", DbType="Bit")]
		public System.Nullable<bool> Positive_Negative
		{
			get
			{
				return this._Positive_Negative;
			}
			set
			{
				if ((this._Positive_Negative != value))
				{
					this.OnPositive_NegativeChanging(value);
					this.SendPropertyChanging();
					this._Positive_Negative = value;
					this.SendPropertyChanged("Positive_Negative");
					this.OnPositive_NegativeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Town")]
	public partial class Town : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Town1;
		
		private System.Nullable<int> _CityID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTown1Changing(string value);
    partial void OnTown1Changed();
    partial void OnCityIDChanging(System.Nullable<int> value);
    partial void OnCityIDChanged();
    #endregion
		
		public Town()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Town", Storage="_Town1", DbType="NVarChar(50)")]
		public string Town1
		{
			get
			{
				return this._Town1;
			}
			set
			{
				if ((this._Town1 != value))
				{
					this.OnTown1Changing(value);
					this.SendPropertyChanging();
					this._Town1 = value;
					this.SendPropertyChanged("Town1");
					this.OnTown1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CityID", DbType="Int")]
		public System.Nullable<int> CityID
		{
			get
			{
				return this._CityID;
			}
			set
			{
				if ((this._CityID != value))
				{
					this.OnCityIDChanging(value);
					this.SendPropertyChanging();
					this._CityID = value;
					this.SendPropertyChanged("CityID");
					this.OnCityIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<byte> _UserType;
		
		private System.Nullable<int> _UserTypeID;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _LastEntry;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnUserTypeChanging(System.Nullable<byte> value);
    partial void OnUserTypeChanged();
    partial void OnUserTypeIDChanging(System.Nullable<int> value);
    partial void OnUserTypeIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnLastEntryChanging(System.Nullable<System.DateTime> value);
    partial void OnLastEntryChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(50)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserType", DbType="TinyInt")]
		public System.Nullable<byte> UserType
		{
			get
			{
				return this._UserType;
			}
			set
			{
				if ((this._UserType != value))
				{
					this.OnUserTypeChanging(value);
					this.SendPropertyChanging();
					this._UserType = value;
					this.SendPropertyChanged("UserType");
					this.OnUserTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserTypeID", DbType="Int")]
		public System.Nullable<int> UserTypeID
		{
			get
			{
				return this._UserTypeID;
			}
			set
			{
				if ((this._UserTypeID != value))
				{
					this.OnUserTypeIDChanging(value);
					this.SendPropertyChanging();
					this._UserTypeID = value;
					this.SendPropertyChanged("UserTypeID");
					this.OnUserTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastEntry", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastEntry
		{
			get
			{
				return this._LastEntry;
			}
			set
			{
				if ((this._LastEntry != value))
				{
					this.OnLastEntryChanging(value);
					this.SendPropertyChanging();
					this._LastEntry = value;
					this.SendPropertyChanged("LastEntry");
					this.OnLastEntryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserType")]
	public partial class UserType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Usertype1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUsertype1Changing(string value);
    partial void OnUsertype1Changed();
    #endregion
		
		public UserType()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Usertype", Storage="_Usertype1", DbType="NVarChar(50)")]
		public string Usertype1
		{
			get
			{
				return this._Usertype1;
			}
			set
			{
				if ((this._Usertype1 != value))
				{
					this.OnUsertype1Changing(value);
					this.SendPropertyChanging();
					this._Usertype1 = value;
					this.SendPropertyChanged("Usertype1");
					this.OnUsertype1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppointmentPatientDetials")]
	public partial class AppointmentPatientDetial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _AppointmentID;
		
		private System.Nullable<System.DateTime> _DateTakeSample;
		
		private System.Nullable<bool> _SampleTakeLater;
		
		private System.Nullable<int> _TestID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<bool> _IsDeleted;
		
		private System.Nullable<int> _LastUpdateUser;
		
		private System.Nullable<System.DateTime> _LastUpdatedate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppointmentIDChanging(System.Nullable<int> value);
    partial void OnAppointmentIDChanged();
    partial void OnDateTakeSampleChanging(System.Nullable<System.DateTime> value);
    partial void OnDateTakeSampleChanged();
    partial void OnSampleTakeLaterChanging(System.Nullable<bool> value);
    partial void OnSampleTakeLaterChanged();
    partial void OnTestIDChanging(System.Nullable<int> value);
    partial void OnTestIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnIsDeletedChanging(System.Nullable<bool> value);
    partial void OnIsDeletedChanged();
    partial void OnLastUpdateUserChanging(System.Nullable<int> value);
    partial void OnLastUpdateUserChanged();
    partial void OnLastUpdatedateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedateChanged();
    #endregion
		
		public AppointmentPatientDetial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentID", DbType="Int")]
		public System.Nullable<int> AppointmentID
		{
			get
			{
				return this._AppointmentID;
			}
			set
			{
				if ((this._AppointmentID != value))
				{
					this.OnAppointmentIDChanging(value);
					this.SendPropertyChanging();
					this._AppointmentID = value;
					this.SendPropertyChanged("AppointmentID");
					this.OnAppointmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateTakeSample", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateTakeSample
		{
			get
			{
				return this._DateTakeSample;
			}
			set
			{
				if ((this._DateTakeSample != value))
				{
					this.OnDateTakeSampleChanging(value);
					this.SendPropertyChanging();
					this._DateTakeSample = value;
					this.SendPropertyChanged("DateTakeSample");
					this.OnDateTakeSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTakeLater", DbType="Bit")]
		public System.Nullable<bool> SampleTakeLater
		{
			get
			{
				return this._SampleTakeLater;
			}
			set
			{
				if ((this._SampleTakeLater != value))
				{
					this.OnSampleTakeLaterChanging(value);
					this.SendPropertyChanging();
					this._SampleTakeLater = value;
					this.SendPropertyChanged("SampleTakeLater");
					this.OnSampleTakeLaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestID", DbType="Int")]
		public System.Nullable<int> TestID
		{
			get
			{
				return this._TestID;
			}
			set
			{
				if ((this._TestID != value))
				{
					this.OnTestIDChanging(value);
					this.SendPropertyChanging();
					this._TestID = value;
					this.SendPropertyChanged("TestID");
					this.OnTestIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsDeleted", DbType="Bit")]
		public System.Nullable<bool> IsDeleted
		{
			get
			{
				return this._IsDeleted;
			}
			set
			{
				if ((this._IsDeleted != value))
				{
					this.OnIsDeletedChanging(value);
					this.SendPropertyChanging();
					this._IsDeleted = value;
					this.SendPropertyChanged("IsDeleted");
					this.OnIsDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateUser", DbType="Int")]
		public System.Nullable<int> LastUpdateUser
		{
			get
			{
				return this._LastUpdateUser;
			}
			set
			{
				if ((this._LastUpdateUser != value))
				{
					this.OnLastUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateUser = value;
					this.SendPropertyChanged("LastUpdateUser");
					this.OnLastUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedate
		{
			get
			{
				return this._LastUpdatedate;
			}
			set
			{
				if ((this._LastUpdatedate != value))
				{
					this.OnLastUpdatedateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedate = value;
					this.SendPropertyChanged("LastUpdatedate");
					this.OnLastUpdatedateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AppointmentPatient")]
	public partial class AppointmentPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Appointment;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _PatientID;
		
		private System.Nullable<int> _AppointmentType;
		
		private System.Nullable<System.DateTime> _DateToTakeSample;
		
		private System.Nullable<bool> _SampleTakeLater;
		
		private System.Nullable<System.DateTime> _DateSampleTaken;
		
		private string _Address;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _Isdeleted;
		
		private System.Nullable<int> _LastUpdateUser;
		
		private System.Nullable<System.DateTime> _LastUpdatedate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAppointmentChanging(string value);
    partial void OnAppointmentChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPatientIDChanging(System.Nullable<int> value);
    partial void OnPatientIDChanged();
    partial void OnAppointmentTypeChanging(System.Nullable<int> value);
    partial void OnAppointmentTypeChanged();
    partial void OnDateToTakeSampleChanging(System.Nullable<System.DateTime> value);
    partial void OnDateToTakeSampleChanged();
    partial void OnSampleTakeLaterChanging(System.Nullable<bool> value);
    partial void OnSampleTakeLaterChanged();
    partial void OnDateSampleTakenChanging(System.Nullable<System.DateTime> value);
    partial void OnDateSampleTakenChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnIsdeletedChanging(System.Nullable<bool> value);
    partial void OnIsdeletedChanged();
    partial void OnLastUpdateUserChanging(System.Nullable<int> value);
    partial void OnLastUpdateUserChanged();
    partial void OnLastUpdatedateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedateChanged();
    #endregion
		
		public AppointmentPatient()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Appointment", DbType="NVarChar(50)")]
		public string Appointment
		{
			get
			{
				return this._Appointment;
			}
			set
			{
				if ((this._Appointment != value))
				{
					this.OnAppointmentChanging(value);
					this.SendPropertyChanging();
					this._Appointment = value;
					this.SendPropertyChanged("Appointment");
					this.OnAppointmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PatientID", DbType="Int")]
		public System.Nullable<int> PatientID
		{
			get
			{
				return this._PatientID;
			}
			set
			{
				if ((this._PatientID != value))
				{
					this.OnPatientIDChanging(value);
					this.SendPropertyChanging();
					this._PatientID = value;
					this.SendPropertyChanged("PatientID");
					this.OnPatientIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentType", DbType="Int")]
		public System.Nullable<int> AppointmentType
		{
			get
			{
				return this._AppointmentType;
			}
			set
			{
				if ((this._AppointmentType != value))
				{
					this.OnAppointmentTypeChanging(value);
					this.SendPropertyChanging();
					this._AppointmentType = value;
					this.SendPropertyChanged("AppointmentType");
					this.OnAppointmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateToTakeSample", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateToTakeSample
		{
			get
			{
				return this._DateToTakeSample;
			}
			set
			{
				if ((this._DateToTakeSample != value))
				{
					this.OnDateToTakeSampleChanging(value);
					this.SendPropertyChanging();
					this._DateToTakeSample = value;
					this.SendPropertyChanged("DateToTakeSample");
					this.OnDateToTakeSampleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SampleTakeLater", DbType="Bit")]
		public System.Nullable<bool> SampleTakeLater
		{
			get
			{
				return this._SampleTakeLater;
			}
			set
			{
				if ((this._SampleTakeLater != value))
				{
					this.OnSampleTakeLaterChanging(value);
					this.SendPropertyChanging();
					this._SampleTakeLater = value;
					this.SendPropertyChanged("SampleTakeLater");
					this.OnSampleTakeLaterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DateSampleTaken", DbType="DateTime")]
		public System.Nullable<System.DateTime> DateSampleTaken
		{
			get
			{
				return this._DateSampleTaken;
			}
			set
			{
				if ((this._DateSampleTaken != value))
				{
					this.OnDateSampleTakenChanging(value);
					this.SendPropertyChanging();
					this._DateSampleTaken = value;
					this.SendPropertyChanged("DateSampleTaken");
					this.OnDateSampleTakenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(150)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isdeleted", DbType="Bit")]
		public System.Nullable<bool> Isdeleted
		{
			get
			{
				return this._Isdeleted;
			}
			set
			{
				if ((this._Isdeleted != value))
				{
					this.OnIsdeletedChanging(value);
					this.SendPropertyChanging();
					this._Isdeleted = value;
					this.SendPropertyChanged("Isdeleted");
					this.OnIsdeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdateUser", DbType="Int")]
		public System.Nullable<int> LastUpdateUser
		{
			get
			{
				return this._LastUpdateUser;
			}
			set
			{
				if ((this._LastUpdateUser != value))
				{
					this.OnLastUpdateUserChanging(value);
					this.SendPropertyChanging();
					this._LastUpdateUser = value;
					this.SendPropertyChanged("LastUpdateUser");
					this.OnLastUpdateUserChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUpdatedate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdatedate
		{
			get
			{
				return this._LastUpdatedate;
			}
			set
			{
				if ((this._LastUpdatedate != value))
				{
					this.OnLastUpdatedateChanging(value);
					this.SendPropertyChanging();
					this._LastUpdatedate = value;
					this.SendPropertyChanged("LastUpdatedate");
					this.OnLastUpdatedateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Module")]
	public partial class Module : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _ModuleName;
		
		private System.Nullable<int> _Code;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _OpenFrom;
		
		private System.Nullable<System.DateTime> _EndOpen;
		
		private System.Nullable<bool> _Isshow;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnModuleNameChanging(string value);
    partial void OnModuleNameChanged();
    partial void OnCodeChanging(System.Nullable<int> value);
    partial void OnCodeChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnOpenFromChanging(System.Nullable<System.DateTime> value);
    partial void OnOpenFromChanged();
    partial void OnEndOpenChanging(System.Nullable<System.DateTime> value);
    partial void OnEndOpenChanged();
    partial void OnIsshowChanging(System.Nullable<bool> value);
    partial void OnIsshowChanged();
    #endregion
		
		public Module()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModuleName", DbType="NVarChar(50)")]
		public string ModuleName
		{
			get
			{
				return this._ModuleName;
			}
			set
			{
				if ((this._ModuleName != value))
				{
					this.OnModuleNameChanging(value);
					this.SendPropertyChanging();
					this._ModuleName = value;
					this.SendPropertyChanged("ModuleName");
					this.OnModuleNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="Int")]
		public System.Nullable<int> Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenFrom", DbType="DateTime")]
		public System.Nullable<System.DateTime> OpenFrom
		{
			get
			{
				return this._OpenFrom;
			}
			set
			{
				if ((this._OpenFrom != value))
				{
					this.OnOpenFromChanging(value);
					this.SendPropertyChanging();
					this._OpenFrom = value;
					this.SendPropertyChanged("OpenFrom");
					this.OnOpenFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndOpen", DbType="DateTime")]
		public System.Nullable<System.DateTime> EndOpen
		{
			get
			{
				return this._EndOpen;
			}
			set
			{
				if ((this._EndOpen != value))
				{
					this.OnEndOpenChanging(value);
					this.SendPropertyChanging();
					this._EndOpen = value;
					this.SendPropertyChanged("EndOpen");
					this.OnEndOpenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Isshow", DbType="Bit")]
		public System.Nullable<bool> Isshow
		{
			get
			{
				return this._Isshow;
			}
			set
			{
				if ((this._Isshow != value))
				{
					this.OnIsshowChanging(value);
					this.SendPropertyChanging();
					this._Isshow = value;
					this.SendPropertyChanged("Isshow");
					this.OnIsshowChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Discount")]
	public partial class Discount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _DiscountName;
		
		private System.Nullable<bool> _type;
		
		private System.Nullable<decimal> _Amount;
		
		private System.Nullable<decimal> _Percentage;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDiscountNameChanging(string value);
    partial void OnDiscountNameChanged();
    partial void OntypeChanging(System.Nullable<bool> value);
    partial void OntypeChanged();
    partial void OnAmountChanging(System.Nullable<decimal> value);
    partial void OnAmountChanged();
    partial void OnPercentageChanging(System.Nullable<decimal> value);
    partial void OnPercentageChanged();
    #endregion
		
		public Discount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountName", DbType="NVarChar(50)")]
		public string DiscountName
		{
			get
			{
				return this._DiscountName;
			}
			set
			{
				if ((this._DiscountName != value))
				{
					this.OnDiscountNameChanging(value);
					this.SendPropertyChanging();
					this._DiscountName = value;
					this.SendPropertyChanged("DiscountName");
					this.OnDiscountNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Bit")]
		public System.Nullable<bool> type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Amount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Amount
		{
			get
			{
				return this._Amount;
			}
			set
			{
				if ((this._Amount != value))
				{
					this.OnAmountChanging(value);
					this.SendPropertyChanging();
					this._Amount = value;
					this.SendPropertyChanged("Amount");
					this.OnAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Percentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Percentage
		{
			get
			{
				return this._Percentage;
			}
			set
			{
				if ((this._Percentage != value))
				{
					this.OnPercentageChanging(value);
					this.SendPropertyChanging();
					this._Percentage = value;
					this.SendPropertyChanged("Percentage");
					this.OnPercentageChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDiscount")]
	public partial class InvoiceDiscount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _InvoiceID;
		
		private System.Nullable<int> _InvoicedetialsID;
		
		private System.Nullable<int> _DiscountTypeID;
		
		private System.Nullable<decimal> _DiscountAmount;
		
		private System.Nullable<decimal> _DiscountPercentage;
		
		private System.Nullable<bool> _IsActive;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UpdateUserID;
		
		private System.Nullable<System.DateTime> _Updatetime;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceIDChanging(System.Nullable<int> value);
    partial void OnInvoiceIDChanged();
    partial void OnInvoicedetialsIDChanging(System.Nullable<int> value);
    partial void OnInvoicedetialsIDChanged();
    partial void OnDiscountTypeIDChanging(System.Nullable<int> value);
    partial void OnDiscountTypeIDChanged();
    partial void OnDiscountAmountChanging(System.Nullable<decimal> value);
    partial void OnDiscountAmountChanged();
    partial void OnDiscountPercentageChanging(System.Nullable<decimal> value);
    partial void OnDiscountPercentageChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUpdateUserIDChanging(System.Nullable<int> value);
    partial void OnUpdateUserIDChanged();
    partial void OnUpdatetimeChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatetimeChanged();
    #endregion
		
		public InvoiceDiscount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int")]
		public System.Nullable<int> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoicedetialsID", DbType="Int")]
		public System.Nullable<int> InvoicedetialsID
		{
			get
			{
				return this._InvoicedetialsID;
			}
			set
			{
				if ((this._InvoicedetialsID != value))
				{
					this.OnInvoicedetialsIDChanging(value);
					this.SendPropertyChanging();
					this._InvoicedetialsID = value;
					this.SendPropertyChanged("InvoicedetialsID");
					this.OnInvoicedetialsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountTypeID", DbType="Int")]
		public System.Nullable<int> DiscountTypeID
		{
			get
			{
				return this._DiscountTypeID;
			}
			set
			{
				if ((this._DiscountTypeID != value))
				{
					this.OnDiscountTypeIDChanging(value);
					this.SendPropertyChanging();
					this._DiscountTypeID = value;
					this.SendPropertyChanged("DiscountTypeID");
					this.OnDiscountTypeIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountAmount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountAmount
		{
			get
			{
				return this._DiscountAmount;
			}
			set
			{
				if ((this._DiscountAmount != value))
				{
					this.OnDiscountAmountChanging(value);
					this.SendPropertyChanging();
					this._DiscountAmount = value;
					this.SendPropertyChanged("DiscountAmount");
					this.OnDiscountAmountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateUserID", DbType="Int")]
		public System.Nullable<int> UpdateUserID
		{
			get
			{
				return this._UpdateUserID;
			}
			set
			{
				if ((this._UpdateUserID != value))
				{
					this.OnUpdateUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdateUserID = value;
					this.SendPropertyChanged("UpdateUserID");
					this.OnUpdateUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updatetime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Updatetime
		{
			get
			{
				return this._Updatetime;
			}
			set
			{
				if ((this._Updatetime != value))
				{
					this.OnUpdatetimeChanging(value);
					this.SendPropertyChanging();
					this._Updatetime = value;
					this.SendPropertyChanged("Updatetime");
					this.OnUpdatetimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InvoiceName;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<int> _AppointmentID;
		
		private System.Nullable<decimal> _TotalInvoice;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<bool> _Active;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private string _Note;
		
		private System.Nullable<int> _UserID;
		
		private System.Nullable<bool> _Paid;
		
		private System.Nullable<decimal> _TotalInvoiceAfterDiscount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceNameChanging(string value);
    partial void OnInvoiceNameChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnAppointmentIDChanging(System.Nullable<int> value);
    partial void OnAppointmentIDChanged();
    partial void OnTotalInvoiceChanging(System.Nullable<decimal> value);
    partial void OnTotalInvoiceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnActiveChanging(System.Nullable<bool> value);
    partial void OnActiveChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnPaidChanging(System.Nullable<bool> value);
    partial void OnPaidChanged();
    partial void OnTotalInvoiceAfterDiscountChanging(System.Nullable<decimal> value);
    partial void OnTotalInvoiceAfterDiscountChanged();
    #endregion
		
		public Invoice()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceName", DbType="NVarChar(50)")]
		public string InvoiceName
		{
			get
			{
				return this._InvoiceName;
			}
			set
			{
				if ((this._InvoiceName != value))
				{
					this.OnInvoiceNameChanging(value);
					this.SendPropertyChanging();
					this._InvoiceName = value;
					this.SendPropertyChanged("InvoiceName");
					this.OnInvoiceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointmentID", DbType="Int")]
		public System.Nullable<int> AppointmentID
		{
			get
			{
				return this._AppointmentID;
			}
			set
			{
				if ((this._AppointmentID != value))
				{
					this.OnAppointmentIDChanging(value);
					this.SendPropertyChanging();
					this._AppointmentID = value;
					this.SendPropertyChanged("AppointmentID");
					this.OnAppointmentIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoice", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalInvoice
		{
			get
			{
				return this._TotalInvoice;
			}
			set
			{
				if ((this._TotalInvoice != value))
				{
					this.OnTotalInvoiceChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoice = value;
					this.SendPropertyChanged("TotalInvoice");
					this.OnTotalInvoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Active", DbType="Bit")]
		public System.Nullable<bool> Active
		{
			get
			{
				return this._Active;
			}
			set
			{
				if ((this._Active != value))
				{
					this.OnActiveChanging(value);
					this.SendPropertyChanging();
					this._Active = value;
					this.SendPropertyChanged("Active");
					this.OnActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Paid", DbType="Bit")]
		public System.Nullable<bool> Paid
		{
			get
			{
				return this._Paid;
			}
			set
			{
				if ((this._Paid != value))
				{
					this.OnPaidChanging(value);
					this.SendPropertyChanging();
					this._Paid = value;
					this.SendPropertyChanged("Paid");
					this.OnPaidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalInvoiceAfterDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TotalInvoiceAfterDiscount
		{
			get
			{
				return this._TotalInvoiceAfterDiscount;
			}
			set
			{
				if ((this._TotalInvoiceAfterDiscount != value))
				{
					this.OnTotalInvoiceAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._TotalInvoiceAfterDiscount = value;
					this.SendPropertyChanged("TotalInvoiceAfterDiscount");
					this.OnTotalInvoiceAfterDiscountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.InvoiceDetials")]
	public partial class InvoiceDetial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _InvoiceDetials;
		
		private System.Nullable<int> _AppointDetialsID;
		
		private System.Nullable<decimal> _Price;
		
		private System.Nullable<decimal> _Discount;
		
		private System.Nullable<decimal> _DiscountPercentage;
		
		private System.Nullable<System.DateTime> _Date;
		
		private System.Nullable<decimal> _PriceAfterDiscount;
		
		private System.Nullable<System.DateTime> _Rectime;
		
		private System.Nullable<int> _UserID;
		
		private string _Note;
		
		private System.Nullable<int> _InvoiceID;
		
		private System.Nullable<bool> _IsActive;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnInvoiceDetialsChanging(string value);
    partial void OnInvoiceDetialsChanged();
    partial void OnAppointDetialsIDChanging(System.Nullable<int> value);
    partial void OnAppointDetialsIDChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void OnDiscountChanging(System.Nullable<decimal> value);
    partial void OnDiscountChanged();
    partial void OnDiscountPercentageChanging(System.Nullable<decimal> value);
    partial void OnDiscountPercentageChanged();
    partial void OnDateChanging(System.Nullable<System.DateTime> value);
    partial void OnDateChanged();
    partial void OnPriceAfterDiscountChanging(System.Nullable<decimal> value);
    partial void OnPriceAfterDiscountChanged();
    partial void OnRectimeChanging(System.Nullable<System.DateTime> value);
    partial void OnRectimeChanged();
    partial void OnUserIDChanging(System.Nullable<int> value);
    partial void OnUserIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnInvoiceIDChanging(System.Nullable<int> value);
    partial void OnInvoiceIDChanged();
    partial void OnIsActiveChanging(System.Nullable<bool> value);
    partial void OnIsActiveChanged();
    #endregion
		
		public InvoiceDetial()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceDetials", DbType="NVarChar(50)")]
		public string InvoiceDetials
		{
			get
			{
				return this._InvoiceDetials;
			}
			set
			{
				if ((this._InvoiceDetials != value))
				{
					this.OnInvoiceDetialsChanging(value);
					this.SendPropertyChanging();
					this._InvoiceDetials = value;
					this.SendPropertyChanged("InvoiceDetials");
					this.OnInvoiceDetialsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AppointDetialsID", DbType="Int")]
		public System.Nullable<int> AppointDetialsID
		{
			get
			{
				return this._AppointDetialsID;
			}
			set
			{
				if ((this._AppointDetialsID != value))
				{
					this.OnAppointDetialsIDChanging(value);
					this.SendPropertyChanging();
					this._AppointDetialsID = value;
					this.SendPropertyChanged("AppointDetialsID");
					this.OnAppointDetialsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiscountPercentage", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> DiscountPercentage
		{
			get
			{
				return this._DiscountPercentage;
			}
			set
			{
				if ((this._DiscountPercentage != value))
				{
					this.OnDiscountPercentageChanging(value);
					this.SendPropertyChanging();
					this._DiscountPercentage = value;
					this.SendPropertyChanged("DiscountPercentage");
					this.OnDiscountPercentageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="DateTime")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this.OnDateChanging(value);
					this.SendPropertyChanging();
					this._Date = value;
					this.SendPropertyChanged("Date");
					this.OnDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PriceAfterDiscount", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> PriceAfterDiscount
		{
			get
			{
				return this._PriceAfterDiscount;
			}
			set
			{
				if ((this._PriceAfterDiscount != value))
				{
					this.OnPriceAfterDiscountChanging(value);
					this.SendPropertyChanging();
					this._PriceAfterDiscount = value;
					this.SendPropertyChanged("PriceAfterDiscount");
					this.OnPriceAfterDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rectime", DbType="DateTime")]
		public System.Nullable<System.DateTime> Rectime
		{
			get
			{
				return this._Rectime;
			}
			set
			{
				if ((this._Rectime != value))
				{
					this.OnRectimeChanging(value);
					this.SendPropertyChanging();
					this._Rectime = value;
					this.SendPropertyChanged("Rectime");
					this.OnRectimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int")]
		public System.Nullable<int> UserID
		{
			get
			{
				return this._UserID;
			}
			set
			{
				if ((this._UserID != value))
				{
					this.OnUserIDChanging(value);
					this.SendPropertyChanging();
					this._UserID = value;
					this.SendPropertyChanged("UserID");
					this.OnUserIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="NVarChar(500)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvoiceID", DbType="Int")]
		public System.Nullable<int> InvoiceID
		{
			get
			{
				return this._InvoiceID;
			}
			set
			{
				if ((this._InvoiceID != value))
				{
					this.OnInvoiceIDChanging(value);
					this.SendPropertyChanging();
					this._InvoiceID = value;
					this.SendPropertyChanged("InvoiceID");
					this.OnInvoiceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit")]
		public System.Nullable<bool> IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this.OnIsActiveChanging(value);
					this.SendPropertyChanging();
					this._IsActive = value;
					this.SendPropertyChanged("IsActive");
					this.OnIsActiveChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
